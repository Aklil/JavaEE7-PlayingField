<?xml version="1.0" encoding="UTF-8"?>
<!--<beans xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd" >-->
    
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
       http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd"
       default-lazy-init="true">       
    <!--dont forgetto check the xmlns entities-->
    <!--<bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping"/>-->
    
    <!--search in this context annotation based-->
    <mvc:annotation-driven />
    
    <!-- Configure to plugin JSON as request and response in method handler -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jsonMessageConverter"/>
            </list>
        </property>
    </bean>
     
    <!-- Configure bean to convert JSON to POJO and vice versa -->
    <bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    </bean> 
    
        <!--where components are stored and register them in spring container-->
    <context:annotation-config />
    <context:component-scan base-package="com.distributedapplication.springcontrollers" />
    
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <!-- Turn off working out content type based on URL file extension, should fall back to looking at the Accept headers -->
        <property name="favorPathExtension" value="false" />
    </bean>
    
<!--     Configure bean to convert JSON to POJO and vice versa 
    <bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    </bean>   -->
    
    <!--added to make no catching-->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="cacheSeconds" value="0" />
    </bean>

   

    <!--
    Most controllers will use the ControllerClassNameHandlerMapping above, but
    for the index controller we are using ParameterizableViewController, so we must
    define an explicit mapping for it.
    -->
    <bean id="urlMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="mappings">
            <props>
                <prop key="index.htm">indexController</prop>
            </props>
        </property>
    </bean>

    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/WEB-INF/jsp/"
          p:suffix=".jsp" />

    <!--
    The index controller.
    -->
    <bean name="indexController"
          class="org.springframework.web.servlet.mvc.ParameterizableViewController"
          p:viewName="index" />


    
<!--    <jee:local-slsb id="testStatelessFacadeLocal" jndi-name="java:module/TestStatelessFacade"
            business-interface="com.distributedapplication.TestStatelessFacadeLocal"
            cache-home="false" lookup-home-on-startup="false"
            resource-ref="false"
            lazy-init="true" />
    
    <jee:jndi-lookup id="testStatefulFacadeLocal" jndi-name="java:module/TestStatefulFacade!com.distributedapplication.TestStatefulFacadeLocal"
            resource-ref="false"
            lazy-init="true"  />-->
    
<!--    <jee:jndi-lookup id="testSingletonFacadeLocal" jndi-name="java:module/TestSingletonFacade!com.distributedapplication.TestSingletonFacadeLocal"
            resource-ref="false"
            lazy-init="true"  />-->
    
<!--    <jee:local-slsb id="testTimerServiceFacadeLocal" jndi-name="java:module/TestTimerServiceFacade!com.distributedapplication.TestTimerServiceFacadeLocal"
            business-interface="com.distributedapplication.TestTimerServiceFacadeLocal"
            cache-home="false" lookup-home-on-startup="false"
            resource-ref="false"
            lazy-init="true" />-->
            
       <!--serving static resources like html. index.html will be invoked here-->
       
    <mvc:resources mapping="/static**" location="/static/"  cache-period="0"/> 
    
<!--    <mvc:resources mapping="/static**" location="/static/"  cache-period="0"/> -->
</beans>  
